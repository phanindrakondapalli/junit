/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */
plugins{
    // Apply the java plugin to add support for Java
    id 'com.gradle.build-scan' version '2.1'
    id "org.sonarqube" version "2.7"
    id 'java'
    
    // Apply the application plugin to add support for building an application
    id 'application'
}
 apply plugin: 'java'

dependencies {
  testCompile 'junit:junit:4.12'
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
  
    mavenCentral()
}

dependencies {
     def junit4Version   = '4.12'
     def junitBomVersion = '5.4.2'
     
     testImplementation(platform("org.junit:junit-bom:5.4.2"))
     
     testImplementation("org.junit.jupiter:junit-jupiter")
     
     testImplementation("junit:junit:4.12")
     
     testRuntimeOnly("org.junit.vintage:junit-vintage-engine"){
         because 'allows JUnit 3 and JUnit 4 tests to run'
     }
     testRuntimeOnly("org.junit.platform:junit-platform-launcher"){
         because 'allows tests to run from IDEs that bundle older version of launcher'
     }
         
    // This dependency is found on compile classpath of this component and consumers.
//     impIementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
   // testImplementation 'junit:junit:4.12'
}
test {
    useJUnitPlatform()
}
// Define the main class for the applicati
mainClassName ='JunitTest.Library'